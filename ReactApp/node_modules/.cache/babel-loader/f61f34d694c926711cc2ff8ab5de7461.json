{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Desktop\\\\CODECOOL\\\\CodecoolLiveShare\\\\ReactApp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Card from './components/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [gitUser, setGitUser] = useState(\"\");\n  const [cardList, setCardList] = useState([]);\n  const [favoriteRepoList, setFavoriteRepoList] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const addNewUser = () => {\n    fetch(`https://api.github.com/users/${gitUser}`).then(result => result.json()).then(result => {\n      let exists = false;\n      cardList.forEach(element => {\n        if (element.id === result.id) {\n          exists = true;\n        }\n      });\n\n      if (exists === false) {\n        cardList.push(result);\n        setCardList([...cardList]);\n      } else {\n        setError(\"it existst\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const remove = id => {\n    setCardList(cardList.filter(element => element.id !== id));\n  };\n\n  const setFavoriteRepo = repoUrl => {\n    console.log(repoUrl);\n    fetch(repoUrl).then(result => result.json()).then(result => {\n      console.log(result);\n      let newArr = [];\n\n      if (result.length === 0) {\n        alert('No repositories');\n      } else {\n        for (let i = 0; i < 3; i++) {\n          newArr.push(result[i]);\n        }\n\n        setFavoriteRepoList(newArr);\n      }\n\n      console.log(favoriteRepoList);\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        width: '100%',\n        zIndex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row bg-info\",\n        children: favoriteRepoList.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 text-center\",\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"enter github username\",\n            value: gitUser,\n            onChange: e => setGitUser(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewUser,\n            children: \"Add new user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: error ? error : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), cardList.map(element => /*#__PURE__*/_jsxDEV(Card, {\n        id: element.id,\n        avatar: element.avatar_url,\n        name: element.name,\n        repos: element.public_repos,\n        topRepo: setFavoriteRepo,\n        repoUrl: element.repos_url,\n        remove: remove\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"ZusS89whkiotmYnOR8vl6GXzTKQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/CODECOOL/CodecoolLiveShare/ReactApp/src/App.jsx"],"names":["React","useState","Card","App","gitUser","setGitUser","cardList","setCardList","favoriteRepoList","setFavoriteRepoList","error","setError","addNewUser","fetch","then","result","json","exists","forEach","element","id","push","catch","err","console","log","remove","filter","setFavoriteRepo","repoUrl","newArr","length","alert","i","position","top","width","zIndex","map","repo","name","e","target","value","avatar_url","public_repos","repos_url"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Card from './components/card';\r\n\r\n\r\nconst App = () => {\r\n    const [gitUser, setGitUser] = useState(\"\")\r\n    const [cardList, setCardList] = useState([])\r\n    const [favoriteRepoList, setFavoriteRepoList] = useState([])\r\n    const [error, setError] = useState(\"\")\r\n\r\n\r\n    const addNewUser = () => {\r\n        fetch (`https://api.github.com/users/${gitUser}`)\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n            let exists = false;\r\n            cardList.forEach((element) => {\r\n                if(element.id === result.id){\r\n                    exists = true;\r\n                }\r\n            })\r\n            if (exists === false){\r\n                cardList.push(result);\r\n                setCardList([...cardList]);\r\n            } else {\r\n                setError(\"it existst\");\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const remove = (id) => {\r\n        setCardList(cardList.filter((element) => element.id !== id));\r\n    }\r\n\r\n    const setFavoriteRepo = (repoUrl) => {\r\n        console.log(repoUrl);\r\n        fetch(repoUrl)\r\n        .then((result)=> result.json())\r\n        .then((result) => {\r\n            console.log(result);\r\n            let newArr = [];\r\n            if( result.length === 0) {\r\n                alert('No repositories');\r\n            } else {\r\n                for (let i = 0; i < 3; i++) {\r\n                    newArr.push(result[i]);\r\n                }\r\n                setFavoriteRepoList(newArr);\r\n            }\r\n            console.log(favoriteRepoList);\r\n        })\r\n        .catch((err) => console.error(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'fixed', top:0, width: '100%', zIndex: 1}}>\r\n                <div className=\"row bg-info\">\r\n                    {favoriteRepoList.map(repo =>\r\n                        <div className=\"col-4 text-center\">{repo.name}</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-6\">\r\n                        <input placeholder=\"enter github username\" value={gitUser} onChange={e => setGitUser(e.target.value)}/>\r\n                        <button onClick={addNewUser}>Add new user</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-6\">\r\n                        {error ? error : \"\"}\r\n                    </div>\r\n                </div>\r\n                {cardList.map((element) => (\r\n                    <Card \r\n                        key={element.id}\r\n                        id={element.id}\r\n                        avatar={element.avatar_url}\r\n                        name={element.name}\r\n                        repos={element.public_repos}\r\n                        topRepo={setFavoriteRepo}\r\n                        repoUrl={element.repos_url}\r\n                        remove={remove}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}